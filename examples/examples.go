package main

import (
	"fmt"

	pp "github.com/engmtcdrm/go-prettyprint"
)

func main() {
	fmt.Printf("=== Go PrettyPrint Examples ===\n\n")

	// Text Formatting Functions
	fmt.Println("--- Text Formatting ---")
	fmt.Println("Bold:", pp.Bold("This text is bold"))
	fmt.Println("Boldf:", pp.Boldf("This %s text has %d characters", "bold", 4))
	fmt.Println("Dim:", pp.Dim("This text is dimmed"))
	fmt.Println("Dimf:", pp.Dimf("This %s text is dimmed", "formatted"))
	fmt.Println("Italic:", pp.Italic("This text is italic"))
	fmt.Println("Italicf:", pp.Italicf("This %s text is italic", "formatted"))
	fmt.Println("Underline:", pp.Underline("This text is underlined"))
	fmt.Println("Underlinef:", pp.Underlinef("This %s text is underlined", "formatted"))
	fmt.Println("DoubleUnderline:", pp.DoubleUnderline("This text has double underline"))
	fmt.Println("DoubleUnderlinef:", pp.DoubleUnderlinef("This %s text has double underline", "formatted"))
	fmt.Println("Reverse:", pp.Reverse("This text is reversed"))
	fmt.Println("Reversef:", pp.Reversef("This %s text is reversed", "formatted"))
	fmt.Println("Strike:", pp.Strike("This text is struck through"))
	fmt.Println("Strikef:", pp.Strikef("This %s text is struck through", "formatted"))
	fmt.Println()

	// Standard Foreground Colors
	fmt.Println("--- Standard Foreground Colors ---")
	fmt.Println("Black:", pp.Black("Black text"))
	fmt.Println("Blackf:", pp.Blackf("Black text with number %d", 123))
	fmt.Println("Red:", pp.Red("Red text"))
	fmt.Println("Redf:", pp.Redf("Red text with number %d", 123))
	fmt.Println("Green:", pp.Green("Green text"))
	fmt.Println("Greenf:", pp.Greenf("Green text with number %d", 123))
	fmt.Println("Yellow:", pp.Yellow("Yellow text"))
	fmt.Println("Yellowf:", pp.Yellowf("Yellow text with number %d", 123))
	fmt.Println("Blue:", pp.Blue("Blue text"))
	fmt.Println("Bluef:", pp.Bluef("Blue text with number %d", 123))
	fmt.Println("Magenta:", pp.Magenta("Magenta text"))
	fmt.Println("Magentaf:", pp.Magentaf("Magenta text with number %d", 123))
	fmt.Println("Cyan:", pp.Cyan("Cyan text"))
	fmt.Println("Cyanf:", pp.Cyanf("Cyan text with number %d", 123))
	fmt.Println("White:", pp.White("White text"))
	fmt.Println("Whitef:", pp.Whitef("White text with number %d", 123))
	fmt.Println()

	// Intense (Bright) Foreground Colors
	fmt.Println("--- Intense Foreground Colors ---")
	fmt.Println("IntenseBlack:", pp.IntenseBlack("Intense black (gray) text"))
	fmt.Println("IntenseBlackf:", pp.IntenseBlackf("Intense black text with number %d", 123))
	fmt.Println("IntenseRed:", pp.IntenseRed("Intense red text"))
	fmt.Println("IntenseRedf:", pp.IntenseRedf("Intense red text with number %d", 123))
	fmt.Println("IntenseGreen:", pp.IntenseGreen("Intense green text"))
	fmt.Println("IntenseGreenf:", pp.IntenseGreenf("Intense green text with number %d", 123))
	fmt.Println("IntenseYellow:", pp.IntenseYellow("Intense yellow text"))
	fmt.Println("IntenseYellowf:", pp.IntenseYellowf("Intense yellow text with number %d", 123))
	fmt.Println("IntenseBlue:", pp.IntenseBlue("Intense blue text"))
	fmt.Println("IntenseBluef:", pp.IntenseBluef("Intense blue text with number %d", 123))
	fmt.Println("IntenseMagenta:", pp.IntenseMagenta("Intense magenta text"))
	fmt.Println("IntenseMagentaf:", pp.IntenseMagentaf("Intense magenta text with number %d", 123))
	fmt.Println("IntenseCyan:", pp.IntenseCyan("Intense cyan text"))
	fmt.Println("IntenseCyanf:", pp.IntenseCyanf("Intense cyan text with number %d", 123))
	fmt.Println("IntenseWhite:", pp.IntenseWhite("Intense white text"))
	fmt.Println("IntenseWhitef:", pp.IntenseWhitef("Intense white text with number %d", 123))
	fmt.Println()

	// Standard Background Colors
	fmt.Println("--- Standard Background Colors ---")
	fmt.Println("BlackBg:", pp.BlackBg("Text with black background"))
	fmt.Println("BlackBgf:", pp.BlackBgf("Text with black background and number %d", 123))
	fmt.Println("RedBg:", pp.RedBg("Text with red background"))
	fmt.Println("RedBgf:", pp.RedBgf("Text with red background and number %d", 123))
	fmt.Println("GreenBg:", pp.GreenBg("Text with green background"))
	fmt.Println("GreenBgf:", pp.GreenBgf("Text with green background and number %d", 123))
	fmt.Println("YellowBg:", pp.YellowBg("Text with yellow background"))
	fmt.Println("YellowBgf:", pp.YellowBgf("Text with yellow background and number %d", 123))
	fmt.Println("BlueBg:", pp.BlueBg("Text with blue background"))
	fmt.Println("BlueBgf:", pp.BlueBgf("Text with blue background and number %d", 123))
	fmt.Println("MagentaBg:", pp.MagentaBg("Text with magenta background"))
	fmt.Println("MagentaBgf:", pp.MagentaBgf("Text with magenta background and number %d", 123))
	fmt.Println("CyanBg:", pp.CyanBg("Text with cyan background"))
	fmt.Println("CyanBgf:", pp.CyanBgf("Text with cyan background and number %d", 123))
	fmt.Println("WhiteBg:", pp.WhiteBg("Text with white background"))
	fmt.Println("WhiteBgf:", pp.WhiteBgf("Text with white background and number %d", 123))
	fmt.Println()

	// Intense (Bright) Background Colors
	fmt.Println("--- Intense Background Colors ---")
	fmt.Println("IntenseBlackBg:", pp.IntenseBlackBg("Text with intense black background"))
	fmt.Println("IntenseBlackBgf:", pp.IntenseBlackBgf("Text with intense black background and number %d", 123))
	fmt.Println("IntenseRedBg:", pp.IntenseRedBg("Text with intense red background"))
	fmt.Println("IntenseRedBgf:", pp.IntenseRedBgf("Text with intense red background and number %d", 123))
	fmt.Println("IntenseGreenBg:", pp.IntenseGreenBg("Text with intense green background"))
	fmt.Println("IntenseGreenBgf:", pp.IntenseGreenBgf("Text with intense green background and number %d", 123))
	fmt.Println("IntenseYellowBg:", pp.IntenseYellowBg("Text with intense yellow background"))
	fmt.Println("IntenseYellowBgf:", pp.IntenseYellowBgf("Text with intense yellow background and number %d", 123))
	fmt.Println("IntenseBlueBg:", pp.IntenseBlueBg("Text with intense blue background"))
	fmt.Println("IntenseBlueBgf:", pp.IntenseBlueBgf("Text with intense blue background and number %d", 123))
	fmt.Println("IntenseMagentaBg:", pp.IntenseMagentaBg("Text with intense magenta background"))
	fmt.Println("IntenseMagentaBgf:", pp.IntenseMagentaBgf("Text with intense magenta background and number %d", 123))
	fmt.Println("IntenseCyanBg:", pp.IntenseCyanBg("Text with intense cyan background"))
	fmt.Println("IntenseCyanBgf:", pp.IntenseCyanBgf("Text with intense cyan background and number %d", 123))
	fmt.Println("IntenseWhiteBg:", pp.IntenseWhiteBg("Text with intense white background"))
	fmt.Println("IntenseWhiteBgf:", pp.IntenseWhiteBgf("Text with intense white background and number %d", 123))
	fmt.Println()

	// 8-bit Colors (256 color palette)
	fmt.Println("--- 8-bit Colors (256 color palette) ---")
	fmt.Println("Fg8Bit:", pp.Fg8Bit(196, "Bright red text using 8-bit color 196"))
	fmt.Println("Fg8Bitf:", pp.Fg8Bitf(46, "Bright green text using 8-bit color %d", 46))
	fmt.Println("Bg8Bit:", pp.Bg8Bit(21, "Text with 8-bit blue background (color 21)"))
	fmt.Println("Bg8Bitf:", pp.Bg8Bitf(226, "Text with 8-bit yellow background (color %d)", 226))
	fmt.Println()

	// 24-bit Colors (RGB)
	fmt.Println("--- 24-bit Colors (RGB) ---")
	fmt.Println("Fg24Bit:", pp.Fg24Bit(255, 100, 50, "Orange text using RGB(255, 100, 50)"))
	fmt.Println("Fg24Bitf:", pp.Fg24Bitf(150, 75, 200, "Purple text using RGB(%d, %d, %d)", 150, 75, 200))
	fmt.Println("Bg24Bit:", pp.Bg24Bit(50, 150, 255, "Text with light blue background RGB(50, 150, 255)"))
	fmt.Println("Bg24Bitf:", pp.Bg24Bitf(255, 200, 100, "Text with peach background RGB(%d, %d, %d)", 255, 200, 100))
	fmt.Println()

	// Icon/Message Functions
	fmt.Println("--- Icon/Message Functions ---")
	fmt.Println("Complete:", pp.Complete("Task completed successfully"))
	fmt.Println("Completef:", pp.Completef("Task %d completed with %d%% success", 5, 100))
	fmt.Println("Alert:", pp.Alert("Warning: This is an alert message"))
	fmt.Println("Alertf:", pp.Alertf("Warning: Error code %d occurred", 404))
	fmt.Println("RedAlert:", pp.RedAlert("Critical: System failure detected"))
	fmt.Println("RedAlertf:", pp.RedAlertf("Critical: System failure with code %d", 500))
	fmt.Println("Fail:", pp.Fail("Operation failed"))
	fmt.Println("Failf:", pp.Failf("Operation failed with exit code %d", 1))
	fmt.Println("Info:", pp.Info("Information: System is running normally"))
	fmt.Println("Infof:", pp.Infof("Information: System uptime is %d hours", 24))
	fmt.Println()

	// Variable Display Functions
	fmt.Println("--- Variable Display Functions ---")
	fmt.Println("Var:", pp.Var("username", "alice"))
	fmt.Println("VarSingleQuote:", pp.VarSingleQuote("config_file", "/etc/app.conf"))
	fmt.Println("VarDoubleQuote:", pp.VarDoubleQuote("database_url", "postgres://localhost:5432/mydb"))
	fmt.Println()

	// Format Function (combines multiple styles)
	fmt.Println("--- Format Function (Multiple Styles) ---")
	fmt.Println("Format (Bold + Red):", pp.Format("Bold red text", pp.Bold, pp.Red))
	fmt.Println("Format (Italic + Blue + Yellow Background):", pp.Format("Styled text", pp.Italic, pp.Blue, pp.YellowBg))
	fmt.Println("Format (Underline + Green):", pp.Format("Underlined green text", pp.Underline, pp.Green))
	fmt.Println("Format (Bold + Strike + Magenta):", pp.Format("Bold struck magenta text", pp.Bold, pp.Strike, pp.Magenta))
	fmt.Println()

	// Edge Cases and Invalid Colors
	fmt.Println("--- Edge Cases ---")
	fmt.Println("Fg8Bit (invalid color 300):", pp.Fg8Bit(300, "This should be plain text"))
	fmt.Println("Fg24Bit (invalid RGB):", pp.Fg24Bit(300, 400, 500, "This should also be plain text"))
	fmt.Println("Bg8Bit (valid boundary 0):", pp.Bg8Bit(0, "Background color 0"))
	fmt.Println("Bg24Bit (valid boundary 255,255,255):", pp.Bg24Bit(255, 255, 255, "White background"))

	fmt.Println("\n=== End of Examples ===")
}
